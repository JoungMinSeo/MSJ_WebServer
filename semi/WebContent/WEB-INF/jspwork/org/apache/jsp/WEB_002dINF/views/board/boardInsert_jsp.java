/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-06-29 07:44:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1623371904277L));
    _jspx_dependants.put("jar:file:/C:/workspace/localRepository/aclass210316_webserver/semi/WebContent/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<style>\r\n");
      out.write("  .insert-label {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    width: 80px;\r\n");
      out.write("    line-height: 40px\r\n");
      out.write("  }\r\n");
      out.write("   \r\n");
      out.write("  .boardImg{\r\n");
      out.write("  	cursor : pointer;\r\n");
      out.write("		width: 200px;\r\n");
      out.write("		height: 200px;\r\n");
      out.write("		border : 1px solid #ced4da;\r\n");
      out.write("		position : relative;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.thubnail{\r\n");
      out.write("		width: 300px;\r\n");
      out.write("		height: 300px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.boardImg > img{\r\n");
      out.write("		max-width : 100%;\r\n");
      out.write("		max-height : 100%;\r\n");
      out.write("		position: absolute;\r\n");
      out.write("		top: 0;\r\n");
      out.write("		bottom : 0;\r\n");
      out.write("		left : 0;\r\n");
      out.write("		right : 0;\r\n");
      out.write("		margin : auto;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	#fileArea{\r\n");
      out.write("		display : none;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"container my-5\">\r\n");
      out.write("\r\n");
      out.write("			<h3>게시글 등록</h3>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<!-- 파일 업로드를 위한 라이브러리 cos.jar 라이브러리 다운로드(http://www.servlets.com/) -->\r\n");
      out.write("			\r\n");
      out.write("			<!-- \r\n");
      out.write("				- enctype : form 태그 데이터가 서버로 제출 될 때 인코딩 되는 방법을 지정. (POST 방식일 때만 사용 가능)\r\n");
      out.write("				- application/x-www-form-urlencoded : 모든 문자를 서버로 전송하기 전에 인코딩 (form태그 기본값)\r\n");
      out.write("				- multipart/form-data : 모든 문자를 인코딩 하지 않음.(원본 데이터가 유지되어 이미지, 파일등을 서버로 전송 할 수 있음.) \r\n");
      out.write("			-->\r\n");
      out.write("			<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board2/insert?type=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" method=\"post\" \r\n");
      out.write("				  enctype=\"multipart/form-data\" role=\"form\" onsubmit=\"return boardValidate();\">\r\n");
      out.write("\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"form-inline mb-2\">\r\n");
      out.write("					<label class=\"input-group-addon mr-3 insert-label\">제목</label> \r\n");
      out.write("					<input type=\"text\" class=\"form-control\" id=\"boardTitle\" name=\"boardTitle\" size=\"70\">\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-inline mb-2\">\r\n");
      out.write("					<label class=\"input-group-addon mr-3 insert-label\">작성자</label>\r\n");
      out.write("					<h5 class=\"my-0\" id=\"writer\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-inline mb-2\">\r\n");
      out.write("					<label class=\"input-group-addon mr-3 insert-label\">작성일</label>\r\n");
      out.write("					<h5 class=\"my-0\" id=\"today\"></h5>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<hr>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-inline mb-2\">\r\n");
      out.write("					<label class=\"input-group-addon mr-3 insert-label\">썸네일</label>\r\n");
      out.write("					<div class=\"boardImg thubnail\" id=\"titleImgArea\">\r\n");
      out.write("						<img id=\"titleImg\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-inline mb-2\">\r\n");
      out.write("					<label class=\"input-group-addon mr-3 insert-label\">업로드<br>이미지</label>\r\n");
      out.write("					<div class=\"mr-2 boardImg\" id=\"contentImgArea1\">\r\n");
      out.write("						<img id=\"contentImg1\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mr-2 boardImg\" id=\"contentImgArea2\">\r\n");
      out.write("						<img id=\"contentImg2\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mr-2 boardImg\" id=\"contentImgArea3\">\r\n");
      out.write("						<img id=\"contentImg3\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<!-- 파일 업로드 하는 부분 -->\r\n");
      out.write("				<div id=\"fileArea\">\r\n");
      out.write("					<!--  multiple 속성\r\n");
      out.write("						- input 요소 하나에 둘 이상의 값을 입력할 수 있음을 명시 (파일 여러개 선택 가능)\r\n");
      out.write("					 -->\r\n");
      out.write("					<input type=\"file\" id=\"img0\" name=\"img0\" onchange=\"LoadImg(this,0)\"> \r\n");
      out.write("					<input type=\"file\" id=\"img1\" name=\"img1\" onchange=\"LoadImg(this,1)\"> \r\n");
      out.write("					<input type=\"file\" id=\"img2\" name=\"img2\" onchange=\"LoadImg(this,2)\"> \r\n");
      out.write("					<input type=\"file\" id=\"img3\" name=\"img3\" onchange=\"LoadImg(this,3)\">\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<div>\r\n");
      out.write("						<label for=\"content\">내용</label>\r\n");
      out.write("					</div>\r\n");
      out.write("					<textarea class=\"form-control\" id=\"boardContent\" name=\"boardContent\" rows=\"15\" style=\"resize: none;\"></textarea>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<hr class=\"mb-4\">\r\n");
      out.write("\r\n");
      out.write("				<div class=\"text-center\">\r\n");
      out.write("					<button type=\"submit\" class=\"btn btn-primary\">등록</button>\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-primary\">목록으로</button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("		(function printToday() {\r\n");
      out.write("			// 오늘 날짜 출력 \r\n");
      out.write("			var today = new Date();\r\n");
      out.write("			var month = (today.getMonth() + 1);\r\n");
      out.write("			var date = today.getDate();\r\n");
      out.write("\r\n");
      out.write("			var str = today.getFullYear() + \"-\"\r\n");
      out.write("					+ (month < 10 ? \"0\" + month : month) + \"-\"\r\n");
      out.write("					+ (date < 10 ? \"0\" + date : date);\r\n");
      out.write("			$(\"#today\").html(str);\r\n");
      out.write("		})();\r\n");
      out.write("\r\n");
      out.write("		// 유효성 검사 \r\n");
      out.write("		function boardValidate() {\r\n");
      out.write("			if ($(\"#boardTitle\").val().trim().length == 0) {\r\n");
      out.write("				alert(\"제목을 입력해 주세요.\");\r\n");
      out.write("				$(\"#title\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if ($(\"#boardContent\").val().trim().length == 0) {\r\n");
      out.write("				alert(\"내용을 입력해 주세요.\");\r\n");
      out.write("				$(\"#content\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 이미지 영역을 클릭할 때 파일 첨부 창이 뜨도록 설정하는 함수\r\n");
      out.write("		$(function() {\r\n");
      out.write("			$(\".boardImg\").on(\"click\", function() {\r\n");
      out.write("				var index = $(\".boardImg\").index(this);\r\n");
      out.write("				$(\"#img\" + index).click();\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		// 각각의 영역에 파일을 첨부 했을 경우 미리 보기가 가능하도록 하는 함수\r\n");
      out.write("		function LoadImg(value, num) {\r\n");
      out.write("			if (value.files && value.files[0]) {\r\n");
      out.write("				var reader = new FileReader();\r\n");
      out.write("				// 자바스크립트 FileReader\r\n");
      out.write("				// 웹 애플리케이션이 비동기적으로 데이터를 읽기 위하여 읽을 파일을 가리키는 File 혹은 Blob객체를 이용해 파일의 내용을 읽고 사용자의 컴퓨터에 저장하는 것을 가능하게 해주는 객체\r\n");
      out.write("\r\n");
      out.write("				reader.readAsDataURL(value.files[0]);\r\n");
      out.write("				// FileReader.readAsDataURL()\r\n");
      out.write("				// 지정된의 내용을 읽기 시작합니다. Blob완료되면 result속성 data:에 파일 데이터를 나타내는 URL이 포함 됩니다.\r\n");
      out.write("\r\n");
      out.write("				// FileReader.onload\r\n");
      out.write("				// load 이벤트의 핸들러. 이 이벤트는 읽기 동작이 성공적으로 완료 되었을 때마다 발생합니다.\r\n");
      out.write("				reader.onload = function(e) {\r\n");
      out.write("					//console.log(e.target.result);\r\n");
      out.write("					// e.target.result\r\n");
      out.write("					// -> 파일 읽기 동작을 성공한 객체에(fileTag) 올라간 결과(이미지 또는 파일)\r\n");
      out.write("\r\n");
      out.write("					$(\".boardImg\").eq(num).children(\"img\").attr(\"src\",\r\n");
      out.write("							e.target.result);\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/boardInsert.jsp(62,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ !empty category}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" \r\n");
          out.write("					<div class=\"mb-2\">\r\n");
          out.write("						<label class=\"input-group-addon mr-3 insert-label\">카테고리</label> \r\n");
          out.write("						<select	class=\"custom-select\" id=\"categoryCode\" name=\"categoryCode\" style=\"width: 150px;\">\r\n");
          out.write("							");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						</select>\r\n");
          out.write("					</div>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/board/boardInsert.jsp(66,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/boardInsert.jsp(66,7) '${category}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${category}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/boardInsert.jsp(66,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("c");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.categoryCode }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.categoryName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
